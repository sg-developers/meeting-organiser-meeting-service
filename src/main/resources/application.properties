server.port=8080
spring.jpa.database=postgresql
spring.jpa.show-sql=false
# temporary
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.properties.jdbc.time_zone=UTC
spring.datasource.driver-class-name=org.postgresql.Driver
# temporary - create dedicated user
spring.datasource.username=postgres
spring.datasource.password=example
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/meeting_organiser
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=<secret>
spring.security.oauth2.client.registration.google.client-secret=<secret>
spring.security.oauth2.client.registration.google.client-authentication-method=basic
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
meeting-organiser.security.jwt.token-secret=secret
meeting-organiser.security.jwt.token-validity-in-ms=864000000ms
meeting-organiser.security.o-auth2.authorized-redirect-uris=http://localhost:4200
logging.level.pl.sg.meetingorganiser=DEBUG
logging.level.org.hibernate.SQL=DEBUG
